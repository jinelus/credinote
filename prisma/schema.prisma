// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum OrderStatus {
  UNPAID
  PAID
}

enum PaymentMethod {
  CASH
  CARD
  PIX
}

model Organization {
  id        String   @id @default(uuid())
  name      String
  slug      String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  clients   Client[]

  @@map("organizations")
}

model Client {
  id             String    @id @default(uuid())
  name           String
  cpf            String    @unique
  telephone      String
  createdAt      DateTime  @default(now()) @map("created_at")
  amount         Decimal   @db.Decimal(10, 2)
  organizationId String    @map("organization_id")
  Order          Order[]
  Payment        Payment[]

  organization Organization @relation(fields: [organizationId], references: [id])

  @@map("clients")
}

model Order {
  id       String      @id @default(uuid())
  date     DateTime    @default(now())
  total    Decimal     @db.Decimal(10, 2)
  status   OrderStatus @default(UNPAID)
  datePaid DateTime    @default(now()) @map("date_paid")
  idClient String      @map("id_client")

  client Client @relation(fields: [idClient], references: [id])

  @@map("orders")
}

model Payment {
  id       String        @id @default(uuid())
  idClient String        @map("id_client")
  amount   Decimal       @db.Decimal(10, 2)
  method   PaymentMethod @default(CASH)
  paidAt   DateTime      @map("paid_at")

  client Client @relation(fields: [idClient], references: [id])

  @@map("payments")
}
